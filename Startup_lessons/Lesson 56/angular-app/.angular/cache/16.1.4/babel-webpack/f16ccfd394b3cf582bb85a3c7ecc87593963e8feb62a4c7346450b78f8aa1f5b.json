{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class GroupService {\n  constructor() {\n    this.groupNameChanged = new EventEmitter();\n    this.groupName = 'Healthy lifestyle';\n  }\n  getGroupName() {\n    return this.groupName;\n  }\n  setGroupName(newGroupName) {\n    this.groupName = newGroupName;\n    this.groupNameChanged.emit(newGroupName);\n  }\n}\nGroupService.ɵfac = function GroupService_Factory(t) {\n  return new (t || GroupService)();\n};\nGroupService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GroupService,\n  factory: GroupService.ɵfac\n});","map":{"version":3,"names":["EventEmitter","GroupService","constructor","groupNameChanged","groupName","getGroupName","setGroupName","newGroupName","emit","factory","ɵfac"],"sources":["C:\\Startup_academy_IT\\Startup_academy\\First_project\\Startup_lessons\\Lesson 56\\angular-app\\src\\app\\service\\group.service.ts"],"sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GroupService {\r\n  groupNameChanged = new EventEmitter<string>();\r\n  private groupName = 'Healthy lifestyle';\r\n\r\n  getGroupName(): string {\r\n    return this.groupName;\r\n  }\r\n\r\n  setGroupName(newGroupName: string): void {\r\n    this.groupName = newGroupName;\r\n    this.groupNameChanged.emit(newGroupName);\r\n  }\r\n}"],"mappings":"AAAA,SAAqBA,YAAY,QAAQ,eAAe;;AAGxD,OAAM,MAAOC,YAAY;EADzBC,YAAA;IAEE,KAAAC,gBAAgB,GAAG,IAAIH,YAAY,EAAU;IACrC,KAAAI,SAAS,GAAG,mBAAmB;;EAEvCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACD,SAAS;EACvB;EAEAE,YAAYA,CAACC,YAAoB;IAC/B,IAAI,CAACH,SAAS,GAAGG,YAAY;IAC7B,IAAI,CAACJ,gBAAgB,CAACK,IAAI,CAACD,YAAY,CAAC;EAC1C;;AAXWN,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAQ,OAAA,EAAZR,YAAY,CAAAS;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}